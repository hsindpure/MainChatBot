<!DOCTYPE html>
<html>
<head>
    <title>Qlik Sense Data Mashup</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://unpkg.com/enigma.js@2.7.0/enigma.min.js"></script>
    <script src="https://unpkg.com/enigma.js@2.7.0/schemas/12.612.0.json"></script>
    <style>
        #data-container {
            width: 80%;
            margin: 20px auto;
            border: 1px solid #ccc;
            padding: 10px;
        }

        #json-output {
            white-space: pre-wrap; /* Allow line breaks */
            font-family: monospace;
        }
    </style>
</head>
<body>
    <h1>Qlik Sense App Data</h1>
    <div id="data-container">
        <pre id="json-output"></pre>
    </div>

    <script>
        $(document).ready(function() {
            const appId = 'your-app-id'; // Replace with your Qlik Sense app ID

            // Qlik Sense Configuration
            const qlikConfig = {
                host: 'localhost', // Replace with your Qlik Sense server address
                port: 4848, // Default Qlik Sense port
                prefix: '/', // Default prefix
                isSecure: false, // Set to true if using HTTPS
                appId: appId
            };

            // Enigma.js Session Configuration
            const session = enigma.create({
                schema: enigma.schemas['12.612.0'], // Replace with your Qlik Sense version's schema
                url: `ws://${qlikConfig.host}:${qlikConfig.port}${qlikConfig.prefix}app/${qlikConfig.appId}`,
                createSocket: url => new WebSocket(url)
            });

            async function getAppDetailsAsJson(appId) {
                const appData = {};

                try {
                    // 1. Establish a session and open the Qlik Sense app.
                    const global = await session.open();
                    const app = await global.openDoc(appId);

                    // 2. Get the app layout.
                    appData.layout = await app.getLayout();

                    // 3. Get the app's load script.
                    appData.loadScript = await app.getScript();

                    // 4. Get a list of dimensions and measures (optional).
                    appData.dimensions = await app.getDimensionList();
                    appData.measures = await app.getMeasureList();

                    // 5. Get a list of sheets and master objects.
                    appData.sheets = [];
                    const sheets = await app.getObjects({ qType: 'sheet' }); // Get all sheets.
                    for (const sheet of sheets) {
                        const sheetInfo = {
                            id: sheet.qInfo.qId,
                            name: sheet.qMeta.title,
                            objects: [],
                        };

                        // Get objects within each sheet (e.g., visualizations).
                        const sheetLayout = await app.getObject(sheet.qInfo.qId).getLayout();
                        for (const object of sheetLayout.qChildren) {
                            const objectInfo = {
                                id: object.qInfo.qId,
                                type: object.qInfo.qType,
                                properties: await app.getObject(object.qInfo.qId).getProperties(), // Get object properties.
                            };

                            sheetInfo.objects.push(objectInfo);
                        }
                        appData.sheets.push(sheetInfo);
                    }

                    // 6. Close the Qlik Sense app and session.
                    await app.close();
                    await session.close();

                } catch (error) {
                    console.error('Error extracting app data:', error);
                    $('#json-output').text('Error fetching data. See console for details.');
                    return null; // Indicate failure
                }

                return appData;
            }

            // Call the function and display the data
            getAppDetailsAsJson(appId)
                .then(data => {
                    if (data) {
                        const jsonData = JSON.stringify(data, null, 2);
                        $('#json-output').text(jsonData);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    $('#json-output').text('Error fetching data. See console for details.');
                });
        });
    </script>
</body>
</html>
