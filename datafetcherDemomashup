<!DOCTYPE html>
<html>
<head>
    <title>Qlik Sense Data Mashup</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; }
        #json-display {
            background-color: #f5f5f5;
            padding: 15px;
            border-radius: 5px;
            white-space: pre-wrap;
            max-height: 80vh;
            overflow-y: auto;
            font-family: monospace;
        }
        button {
            padding: 10px 15px;
            background-color: #0088cc;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-bottom: 10px;
        }
        button:hover { background-color: #005580; }
        .loading {
            color: #666;
            font-style: italic;
        }
    </style>
</head>
<body>
    <h1>Qlik Sense Data Export</h1>
    <button id="fetch-data">Fetch All Data</button>
    <div id="json-display">Click the button to fetch data...</div>

    <script>
        // Configuration - Update with your app ID
        const APP_ID = "your-app-id"; // Replace with your actual app ID

        $(document).ready(function() {
            require(["qlik"], function(qlik) {
                let app;

                // Open Qlik app
                qlik.openApp(APP_ID).then(function(qlikApp) {
                    app = qlikApp;
                    console.log("App opened successfully");
                }).catch(function(error) {
                    console.error("Error opening app:", error);
                    $("#json-display").html(`<span style="color:red">Error: ${error.message}</span>`);
                });

                // Fetch data on button click
                $("#fetch-data").click(async function() {
                    try {
                        $("#json-display").html('<div class="loading">Fetching data...</div>');
                        const jsonData = await fetchAllData();
                        $("#json-display").text(JSON.stringify(jsonData, null, 2));
                    } catch (error) {
                        console.error("Error fetching data:", error);
                        $("#json-display").html(`<span style="color:red">Error: ${error.message}</span>`);
                    }
                });

                // Function to fetch all data
                async function fetchAllData() {
                    // Get all fields in the app
                    const fields = await app.field.get();
                    
                    // Create hypercube definition
                    const hypercubeDef = {
                        qDimensions: fields.map(field => ({
                            qDimension: {
                                qDef: {
                                    qFieldDefs: [field.qName]
                                }
                            }
                        })),
                        qMeasures: [],
                        qInitialDataFetch: [{
                            qWidth: fields.length,
                            qHeight: 1000 // Adjust based on your data size
                        }]
                    };

                    // Create generic object
                    const genericObject = await app.createGenericObject({
                        qHyperCubeDef: hypercubeDef
                    });

                    // Get full hypercube data
                    const layout = await genericObject.getLayout();
                    const data = await genericObject.getFullHyperCubeData(
                        '/qHyperCubeDef', 
                        layout.qHyperCube.qSize.qcy, 
                        layout.qHyperCube.qSize.qcx
                    );

                    // Convert to array of objects
                    return data.qMatrix.map(row => {
                        const obj = {};
                        fields.forEach((field, index) => {
                            obj[field.qName] = row[index].qText;
                        });
                        return obj;
                    });
                }
            });
        });
    </script>
</body>
</html>
